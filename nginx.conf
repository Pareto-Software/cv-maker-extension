worker_processes 1;

events { worker_connections 1024; }

http {
    sendfile on;

    log_format upstream_log '[$time_local] $remote_addr - $remote_user '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '"$request_time" "$upstream_response_time" '
			   'proxied_to: "$proxy_host$request_uri" '
                           'proxied_url: "$scheme://$proxy_host$uri" '
                           '"$upstream_addr" "$upstream_status" "$upstream_http_content_type"';

    access_log /var/log/nginx/access.log upstream_log;


    server {
        listen 80;

        location /token {
            proxy_pass https://oauth2.googleapis.com/token;
            # Preserve original request headers and forward them as-is
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
            
            # Preserve original body, headers, and other properties
            proxy_set_header Content-Length $content_length;
            proxy_set_header Content-Type $content_type;

            # Don't modify authentication and authorization headers
            proxy_pass_header Authorization;
            proxy_pass_header Set-Cookie;

            access_log /var/log/nginx/access.log upstream_log;
        }

        location /oauth2/auth {
            # the following adds the client_id to the query string but is useless 
            #since chatgpt inner oauth2 flow does not use client_id between the google then
            #set $modified_args $args;
            #if ($args ~ "^(.*?)(?:&)?client_id=[^&]*(?:&)?(.*)$") {
            #    set $modified_args ?$1&$2;
            #}
            #return 302 https://accounts.google.com/o/oauth2/v2/auth$modified_args&client_id=1021145397168-h1gtg7mc0080v34um0vhtqtekoglcvrq.apps.googleusercontent.com;

            proxy_pass https://accounts.google.com/o/oauth2/v2/auth;
           
            # Preserve original request headers and forward them as-is
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Host accounts.google.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
             
            # Preserve original body, headers, and other properties
            proxy_set_header Content-Length $content_length;
            proxy_set_header Content-Type $content_type;

            # Don't modify authentication and authorization headers
            proxy_pass_header Authorization;
            proxy_pass_header Set-Cookie;

	        access_log /var/log/nginx/access.log upstream_log;
        }

        # Everything else goes to your app
        location / {
            proxy_pass http://host.docker.internal:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
